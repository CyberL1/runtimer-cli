name: Release
on: push

jobs:
  create-tag:
    name: Create tag
    runs-on: ubuntu-latest
    steps:
      - id: tag_version
        name: Create tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
  Build:
    runs-on: ubuntu-latest
    needs: Create-Tag
    strategy:
      matrix:
        os:
          - windows
          - linux
          - darwin
        arch:
          - amd64
          - arm64
        exclude:
          - os: windows
            arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
      - name: Build binary
        run: |
          export GOOS=${{ matrix.os }}
          export GOARCH=${{ matrix.arch }}
          go build -ldflags "-X runtimercli/constants.Version=${{ needs.create-tag.outputs.new_tag }}"
      - name: Pack binary
        run: zip runtimer-${{ matrix.os }}-${{ matrix.arch }}.zip runtimer${{ matrix.os == 'windows' && '.exe' || '' }}
      - name: Create release
        uses: ncipollo/release-action@v1.11.2
        with:
          tag: ${{ needs.create-tag.outputs.new_tag }}
          artifacts: runtimer-${{ matrix.os }}-${{ matrix.arch }}.zip
          allowUpdates: true